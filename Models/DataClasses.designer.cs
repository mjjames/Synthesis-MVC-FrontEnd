#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mjjames.DataContexts
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="www.caradocmission.org")]
	public partial class CMSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertArticle(mjjames.DataEntities.Article instance);
    partial void UpdateArticle(mjjames.DataEntities.Article instance);
    partial void DeleteArticle(mjjames.DataEntities.Article instance);
    partial void InsertTestimony(mjjames.DataEntities.Testimony instance);
    partial void UpdateTestimony(mjjames.DataEntities.Testimony instance);
    partial void DeleteTestimony(mjjames.DataEntities.Testimony instance);
    partial void InsertBanner(mjjames.DataEntities.Banner instance);
    partial void UpdateBanner(mjjames.DataEntities.Banner instance);
    partial void DeleteBanner(mjjames.DataEntities.Banner instance);
    partial void InsertKeyValue(mjjames.DataEntities.KeyValue instance);
    partial void UpdateKeyValue(mjjames.DataEntities.KeyValue instance);
    partial void DeleteKeyValue(mjjames.DataEntities.KeyValue instance);
    partial void InsertLookup(mjjames.DataEntities.Lookup instance);
    partial void UpdateLookup(mjjames.DataEntities.Lookup instance);
    partial void DeleteLookup(mjjames.DataEntities.Lookup instance);
    partial void InsertMarketingSite(mjjames.DataEntities.MarketingSite instance);
    partial void UpdateMarketingSite(mjjames.DataEntities.MarketingSite instance);
    partial void DeleteMarketingSite(mjjames.DataEntities.MarketingSite instance);
    partial void InsertMedia(mjjames.DataEntities.Media instance);
    partial void UpdateMedia(mjjames.DataEntities.Media instance);
    partial void DeleteMedia(mjjames.DataEntities.Media instance);
    partial void InsertMediaLink(mjjames.DataEntities.MediaLink instance);
    partial void UpdateMediaLink(mjjames.DataEntities.MediaLink instance);
    partial void DeleteMediaLink(mjjames.DataEntities.MediaLink instance);
    partial void InsertNewsletterReciprient(mjjames.DataEntities.NewsletterReciprient instance);
    partial void UpdateNewsletterReciprient(mjjames.DataEntities.NewsletterReciprient instance);
    partial void DeleteNewsletterReciprient(mjjames.DataEntities.NewsletterReciprient instance);
    partial void InsertNewsletter(mjjames.DataEntities.Newsletter instance);
    partial void UpdateNewsletter(mjjames.DataEntities.Newsletter instance);
    partial void DeleteNewsletter(mjjames.DataEntities.Newsletter instance);
    partial void InsertOffer(mjjames.DataEntities.Offer instance);
    partial void UpdateOffer(mjjames.DataEntities.Offer instance);
    partial void DeleteOffer(mjjames.DataEntities.Offer instance);
    partial void InsertPage(mjjames.DataEntities.Page instance);
    partial void UpdatePage(mjjames.DataEntities.Page instance);
    partial void DeletePage(mjjames.DataEntities.Page instance);
    partial void InsertProject(mjjames.DataEntities.Project instance);
    partial void UpdateProject(mjjames.DataEntities.Project instance);
    partial void DeleteProject(mjjames.DataEntities.Project instance);
    partial void InsertSite(mjjames.DataEntities.Site instance);
    partial void UpdateSite(mjjames.DataEntities.Site instance);
    partial void DeleteSite(mjjames.DataEntities.Site instance);
    #endregion
		
		public CMSDataContext() : 
				base(global::mjjames.MVC_MultiTenant_Controllers_and_Models.Properties.Settings.Default.www_caradocmission_orgConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CMSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CMSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CMSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CMSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<mjjames.DataEntities.Article> Articles
		{
			get
			{
				return this.GetTable<mjjames.DataEntities.Article>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.DataEntities.Testimony> Testimonies
		{
			get
			{
				return this.GetTable<mjjames.DataEntities.Testimony>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.DataEntities.Banner> Banners
		{
			get
			{
				return this.GetTable<mjjames.DataEntities.Banner>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.DataEntities.KeyValue> KeyValues
		{
			get
			{
				return this.GetTable<mjjames.DataEntities.KeyValue>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.DataEntities.Lookup> Lookups
		{
			get
			{
				return this.GetTable<mjjames.DataEntities.Lookup>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.DataEntities.MarketingSite> MarketingSites
		{
			get
			{
				return this.GetTable<mjjames.DataEntities.MarketingSite>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.DataEntities.Media> Medias
		{
			get
			{
				return this.GetTable<mjjames.DataEntities.Media>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.DataEntities.MediaLink> MediaLinks
		{
			get
			{
				return this.GetTable<mjjames.DataEntities.MediaLink>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.DataEntities.NewsletterReciprient> NewsletterReciprients
		{
			get
			{
				return this.GetTable<mjjames.DataEntities.NewsletterReciprient>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.DataEntities.Newsletter> Newsletters
		{
			get
			{
				return this.GetTable<mjjames.DataEntities.Newsletter>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.DataEntities.Offer> Offers
		{
			get
			{
				return this.GetTable<mjjames.DataEntities.Offer>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.DataEntities.Page> Pages
		{
			get
			{
				return this.GetTable<mjjames.DataEntities.Page>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.DataEntities.Project> Projects
		{
			get
			{
				return this.GetTable<mjjames.DataEntities.Project>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.DataEntities.Site> Sites
		{
			get
			{
				return this.GetTable<mjjames.DataEntities.Site>();
			}
		}
	}
}
namespace mjjames.DataEntities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.articles")]
	public partial class Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _article_key;
		
		private string _title;
		
		private string _body;
		
		private bool _showonhome;
		
		private string _shortdescription;
		
		private string _thumbnailimage;
		
		private bool _active;
		
		private int _sortorder;
		
		private System.Nullable<System.DateTime> _start_date;
		
		private System.Nullable<System.DateTime> _end_date;
		
		private bool _include_in_feed;
		
		private string _url;
		
		private string _virtualurl;
		
		private System.Nullable<int> _site_fkey;
		
		private EntityRef<Site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onarticle_keyChanging(int value);
    partial void Onarticle_keyChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void OnshowonhomeChanging(bool value);
    partial void OnshowonhomeChanged();
    partial void OnshortdescriptionChanging(string value);
    partial void OnshortdescriptionChanged();
    partial void OnthumbnailimageChanging(string value);
    partial void OnthumbnailimageChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnsortorderChanging(int value);
    partial void OnsortorderChanged();
    partial void Onstart_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onend_dateChanged();
    partial void Oninclude_in_feedChanging(bool value);
    partial void Oninclude_in_feedChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnvirtualurlChanging(string value);
    partial void OnvirtualurlChanged();
    partial void Onsite_fkeyChanging(System.Nullable<int> value);
    partial void Onsite_fkeyChanged();
    #endregion
		
		public Article()
		{
			this._site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_article_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int article_key
		{
			get
			{
				return this._article_key;
			}
			set
			{
				if ((this._article_key != value))
				{
					this.Onarticle_keyChanging(value);
					this.SendPropertyChanging();
					this._article_key = value;
					this.SendPropertyChanged("article_key");
					this.Onarticle_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_showonhome", DbType="Bit NOT NULL")]
		public bool showonhome
		{
			get
			{
				return this._showonhome;
			}
			set
			{
				if ((this._showonhome != value))
				{
					this.OnshowonhomeChanging(value);
					this.SendPropertyChanging();
					this._showonhome = value;
					this.SendPropertyChanged("showonhome");
					this.OnshowonhomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortdescription", DbType="NVarChar(MAX)")]
		public string shortdescription
		{
			get
			{
				return this._shortdescription;
			}
			set
			{
				if ((this._shortdescription != value))
				{
					this.OnshortdescriptionChanging(value);
					this.SendPropertyChanging();
					this._shortdescription = value;
					this.SendPropertyChanged("shortdescription");
					this.OnshortdescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumbnailimage", DbType="NVarChar(50)")]
		public string thumbnailimage
		{
			get
			{
				return this._thumbnailimage;
			}
			set
			{
				if ((this._thumbnailimage != value))
				{
					this.OnthumbnailimageChanging(value);
					this.SendPropertyChanging();
					this._thumbnailimage = value;
					this.SendPropertyChanged("thumbnailimage");
					this.OnthumbnailimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sortorder", DbType="Int NOT NULL")]
		public int sortorder
		{
			get
			{
				return this._sortorder;
			}
			set
			{
				if ((this._sortorder != value))
				{
					this.OnsortorderChanging(value);
					this.SendPropertyChanging();
					this._sortorder = value;
					this.SendPropertyChanged("sortorder");
					this.OnsortorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_include_in_feed", DbType="Bit NOT NULL")]
		public bool include_in_feed
		{
			get
			{
				return this._include_in_feed;
			}
			set
			{
				if ((this._include_in_feed != value))
				{
					this.Oninclude_in_feedChanging(value);
					this.SendPropertyChanging();
					this._include_in_feed = value;
					this.SendPropertyChanged("include_in_feed");
					this.Oninclude_in_feedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(MAX)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_virtualurl", DbType="NVarChar(MAX)")]
		public string virtualurl
		{
			get
			{
				return this._virtualurl;
			}
			set
			{
				if ((this._virtualurl != value))
				{
					this.OnvirtualurlChanging(value);
					this.SendPropertyChanging();
					this._virtualurl = value;
					this.SendPropertyChanged("virtualurl");
					this.OnvirtualurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int")]
		public System.Nullable<int> site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Article", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				Site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.Articles.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.Articles.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.testimonies")]
	public partial class Testimony : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _testimony_key;
		
		private string _title;
		
		private string _description;
		
		private System.Nullable<int> _project_fkey;
		
		private bool _active;
		
		private string _video_id;
		
		private string _url;
		
		private System.Nullable<int> _site_fkey;
		
		private EntityRef<Project> _project;
		
		private EntityRef<Site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontestimony_keyChanging(int value);
    partial void Ontestimony_keyChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onproject_fkeyChanging(System.Nullable<int> value);
    partial void Onproject_fkeyChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void Onvideo_idChanging(string value);
    partial void Onvideo_idChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void Onsite_fkeyChanging(System.Nullable<int> value);
    partial void Onsite_fkeyChanged();
    #endregion
		
		public Testimony()
		{
			this._project = default(EntityRef<Project>);
			this._site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_testimony_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int testimony_key
		{
			get
			{
				return this._testimony_key;
			}
			set
			{
				if ((this._testimony_key != value))
				{
					this.Ontestimony_keyChanging(value);
					this.SendPropertyChanging();
					this._testimony_key = value;
					this.SendPropertyChanged("testimony_key");
					this.Ontestimony_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_fkey", DbType="Int")]
		public System.Nullable<int> project_fkey
		{
			get
			{
				return this._project_fkey;
			}
			set
			{
				if ((this._project_fkey != value))
				{
					if (this._project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproject_fkeyChanging(value);
					this.SendPropertyChanging();
					this._project_fkey = value;
					this.SendPropertyChanged("project_fkey");
					this.Onproject_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_video_id", DbType="NVarChar(50)")]
		public string video_id
		{
			get
			{
				return this._video_id;
			}
			set
			{
				if ((this._video_id != value))
				{
					this.Onvideo_idChanging(value);
					this.SendPropertyChanging();
					this._video_id = value;
					this.SendPropertyChanged("video_id");
					this.Onvideo_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(MAX)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int")]
		public System.Nullable<int> site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Testimony", Storage="_project", ThisKey="project_fkey", OtherKey="project_key", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._project.Entity;
			}
			set
			{
				Project previousValue = this._project.Entity;
				if (((previousValue != value) 
							|| (this._project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project.Entity = null;
						previousValue.Testimonies.Remove(this);
					}
					this._project.Entity = value;
					if ((value != null))
					{
						value.Testimonies.Add(this);
						this._project_fkey = value.project_key;
					}
					else
					{
						this._project_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Testimony", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				Site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.Testimonies.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.Testimonies.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.banners")]
	public partial class Banner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bannerdid;
		
		private string _name;
		
		private string _image;
		
		private string _alttext;
		
		private string _url;
		
		private string _category;
		
		private int _randomness;
		
		private System.Nullable<int> _site_fkey;
		
		private EntityRef<Site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbannerdidChanging(int value);
    partial void OnbannerdidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnalttextChanging(string value);
    partial void OnalttextChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OncategoryChanging(string value);
    partial void OncategoryChanged();
    partial void OnrandomnessChanging(int value);
    partial void OnrandomnessChanged();
    partial void Onsite_fkeyChanging(System.Nullable<int> value);
    partial void Onsite_fkeyChanged();
    #endregion
		
		public Banner()
		{
			this._site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bannerdid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int bannerdid
		{
			get
			{
				return this._bannerdid;
			}
			set
			{
				if ((this._bannerdid != value))
				{
					this.OnbannerdidChanging(value);
					this.SendPropertyChanging();
					this._bannerdid = value;
					this.SendPropertyChanged("bannerdid");
					this.OnbannerdidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alttext", DbType="NVarChar(MAX)")]
		public string alttext
		{
			get
			{
				return this._alttext;
			}
			set
			{
				if ((this._alttext != value))
				{
					this.OnalttextChanging(value);
					this.SendPropertyChanging();
					this._alttext = value;
					this.SendPropertyChanged("alttext");
					this.OnalttextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(255)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category", DbType="NVarChar(20)")]
		public string category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_randomness", DbType="Int NOT NULL")]
		public int randomness
		{
			get
			{
				return this._randomness;
			}
			set
			{
				if ((this._randomness != value))
				{
					this.OnrandomnessChanging(value);
					this.SendPropertyChanging();
					this._randomness = value;
					this.SendPropertyChanged("randomness");
					this.OnrandomnessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int")]
		public System.Nullable<int> site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Banner", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				Site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.Banners.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.Banners.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.keyvalues")]
	public partial class KeyValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _keyvalue_key;
		
		private int _link_fkey;
		
		private int _key_lookup;
		
		private string _value;
		
		private int _link_lookup;
		
		private EntityRef<Lookup> _lookup;
		
		private EntityRef<Lookup> _lookup1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onkeyvalue_keyChanging(int value);
    partial void Onkeyvalue_keyChanged();
    partial void Onlink_fkeyChanging(int value);
    partial void Onlink_fkeyChanged();
    partial void Onkey_lookupChanging(int value);
    partial void Onkey_lookupChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void Onlink_lookupChanging(int value);
    partial void Onlink_lookupChanged();
    #endregion
		
		public KeyValue()
		{
			this._lookup = default(EntityRef<Lookup>);
			this._lookup1 = default(EntityRef<Lookup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keyvalue_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int keyvalue_key
		{
			get
			{
				return this._keyvalue_key;
			}
			set
			{
				if ((this._keyvalue_key != value))
				{
					this.Onkeyvalue_keyChanging(value);
					this.SendPropertyChanging();
					this._keyvalue_key = value;
					this.SendPropertyChanged("keyvalue_key");
					this.Onkeyvalue_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link_fkey", DbType="Int NOT NULL")]
		public int link_fkey
		{
			get
			{
				return this._link_fkey;
			}
			set
			{
				if ((this._link_fkey != value))
				{
					this.Onlink_fkeyChanging(value);
					this.SendPropertyChanging();
					this._link_fkey = value;
					this.SendPropertyChanged("link_fkey");
					this.Onlink_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_key_lookup", DbType="Int NOT NULL")]
		public int key_lookup
		{
			get
			{
				return this._key_lookup;
			}
			set
			{
				if ((this._key_lookup != value))
				{
					if (this._lookup1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onkey_lookupChanging(value);
					this.SendPropertyChanging();
					this._key_lookup = value;
					this.SendPropertyChanged("key_lookup");
					this.Onkey_lookupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link_lookup", DbType="Int NOT NULL")]
		public int link_lookup
		{
			get
			{
				return this._link_lookup;
			}
			set
			{
				if ((this._link_lookup != value))
				{
					if (this._lookup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlink_lookupChanging(value);
					this.SendPropertyChanging();
					this._link_lookup = value;
					this.SendPropertyChanged("link_lookup");
					this.Onlink_lookupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lookup_KeyValue", Storage="_lookup", ThisKey="link_lookup", OtherKey="lookup_key", IsForeignKey=true)]
		public Lookup lookup
		{
			get
			{
				return this._lookup.Entity;
			}
			set
			{
				Lookup previousValue = this._lookup.Entity;
				if (((previousValue != value) 
							|| (this._lookup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lookup.Entity = null;
						previousValue.keyvalues.Remove(this);
					}
					this._lookup.Entity = value;
					if ((value != null))
					{
						value.keyvalues.Add(this);
						this._link_lookup = value.lookup_key;
					}
					else
					{
						this._link_lookup = default(int);
					}
					this.SendPropertyChanged("lookup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lookup_KeyValue1", Storage="_lookup1", ThisKey="key_lookup", OtherKey="lookup_key", IsForeignKey=true)]
		public Lookup Lookup1
		{
			get
			{
				return this._lookup1.Entity;
			}
			set
			{
				Lookup previousValue = this._lookup1.Entity;
				if (((previousValue != value) 
							|| (this._lookup1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lookup1.Entity = null;
						previousValue.KeyValues1.Remove(this);
					}
					this._lookup1.Entity = value;
					if ((value != null))
					{
						value.KeyValues1.Add(this);
						this._key_lookup = value.lookup_key;
					}
					else
					{
						this._key_lookup = default(int);
					}
					this.SendPropertyChanged("Lookup1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookup")]
	public partial class Lookup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _lookup_key;
		
		private string _lookup_id;
		
		private string _title;
		
		private string _type;
		
		private string _value;
		
		private bool _active;
		
		private EntitySet<KeyValue> _keyvalues;
		
		private EntitySet<KeyValue> _keyvalues1;
		
		private EntitySet<MarketingSite> _marketingsites;
		
		private EntitySet<Media> _medias;
		
		private EntitySet<MediaLink> _media_links;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlookup_keyChanging(int value);
    partial void Onlookup_keyChanged();
    partial void Onlookup_idChanging(string value);
    partial void Onlookup_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public Lookup()
		{
			this._keyvalues = new EntitySet<KeyValue>(new Action<KeyValue>(this.attach_keyvalues), new Action<KeyValue>(this.detach_keyvalues));
			this._keyvalues1 = new EntitySet<KeyValue>(new Action<KeyValue>(this.attach_keyvalues1), new Action<KeyValue>(this.detach_keyvalues1));
			this._marketingsites = new EntitySet<MarketingSite>(new Action<MarketingSite>(this.attach_marketingsites), new Action<MarketingSite>(this.detach_marketingsites));
			this._medias = new EntitySet<Media>(new Action<Media>(this.attach_medias), new Action<Media>(this.detach_medias));
			this._media_links = new EntitySet<MediaLink>(new Action<MediaLink>(this.attach_media_links), new Action<MediaLink>(this.detach_media_links));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lookup_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int lookup_key
		{
			get
			{
				return this._lookup_key;
			}
			set
			{
				if ((this._lookup_key != value))
				{
					this.Onlookup_keyChanging(value);
					this.SendPropertyChanging();
					this._lookup_key = value;
					this.SendPropertyChanged("lookup_key");
					this.Onlookup_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lookup_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lookup_id
		{
			get
			{
				return this._lookup_id;
			}
			set
			{
				if ((this._lookup_id != value))
				{
					this.Onlookup_idChanging(value);
					this.SendPropertyChanging();
					this._lookup_id = value;
					this.SendPropertyChanged("lookup_id");
					this.Onlookup_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="BIT NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lookup_KeyValue", Storage="_keyvalues", ThisKey="lookup_key", OtherKey="link_lookup")]
		public EntitySet<KeyValue> keyvalues
		{
			get
			{
				return this._keyvalues;
			}
			set
			{
				this._keyvalues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lookup_KeyValue1", Storage="_keyvalues1", ThisKey="lookup_key", OtherKey="key_lookup")]
		public EntitySet<KeyValue> KeyValues1
		{
			get
			{
				return this._keyvalues1;
			}
			set
			{
				this._keyvalues1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lookup_MarketingSite", Storage="_marketingsites", ThisKey="lookup_key", OtherKey="template_lookup")]
		public EntitySet<MarketingSite> MarketingSites
		{
			get
			{
				return this._marketingsites;
			}
			set
			{
				this._marketingsites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lookup_Media", Storage="_medias", ThisKey="lookup_key", OtherKey="mediatype_lookup")]
		public EntitySet<Media> Medias
		{
			get
			{
				return this._medias;
			}
			set
			{
				this._medias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lookup_MediaLink", Storage="_media_links", ThisKey="lookup_key", OtherKey="linktype_lookup")]
		public EntitySet<MediaLink> MediaLinks
		{
			get
			{
				return this._media_links;
			}
			set
			{
				this._media_links.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_keyvalues(KeyValue entity)
		{
			this.SendPropertyChanging();
			entity.lookup = this;
		}
		
		private void detach_keyvalues(KeyValue entity)
		{
			this.SendPropertyChanging();
			entity.lookup = null;
		}
		
		private void attach_keyvalues1(KeyValue entity)
		{
			this.SendPropertyChanging();
			entity.Lookup1 = this;
		}
		
		private void detach_keyvalues1(KeyValue entity)
		{
			this.SendPropertyChanging();
			entity.Lookup1 = null;
		}
		
		private void attach_marketingsites(MarketingSite entity)
		{
			this.SendPropertyChanging();
			entity.Lookup = this;
		}
		
		private void detach_marketingsites(MarketingSite entity)
		{
			this.SendPropertyChanging();
			entity.Lookup = null;
		}
		
		private void attach_medias(Media entity)
		{
			this.SendPropertyChanging();
			entity.Lookup = this;
		}
		
		private void detach_medias(Media entity)
		{
			this.SendPropertyChanging();
			entity.Lookup = null;
		}
		
		private void attach_media_links(MediaLink entity)
		{
			this.SendPropertyChanging();
			entity.Lookup = this;
		}
		
		private void detach_media_links(MediaLink entity)
		{
			this.SendPropertyChanging();
			entity.Lookup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.marketingsites")]
	public partial class MarketingSite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _marketingsite_key;
		
		private int _site_fkey;
		
		private string _name;
		
		private string _host_name;
		
		private bool _active;
		
		private string _body;
		
		private string _short_description;
		
		private int _template_lookup;
		
		private EntityRef<Lookup> _lookup;
		
		private EntityRef<Site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmarketingsite_keyChanging(int value);
    partial void Onmarketingsite_keyChanged();
    partial void Onsite_fkeyChanging(int value);
    partial void Onsite_fkeyChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onhost_nameChanging(string value);
    partial void Onhost_nameChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void Onshort_descriptionChanging(string value);
    partial void Onshort_descriptionChanged();
    partial void Ontemplate_lookupChanging(int value);
    partial void Ontemplate_lookupChanged();
    #endregion
		
		public MarketingSite()
		{
			this._lookup = default(EntityRef<Lookup>);
			this._site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marketingsite_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int marketingsite_key
		{
			get
			{
				return this._marketingsite_key;
			}
			set
			{
				if ((this._marketingsite_key != value))
				{
					this.Onmarketingsite_keyChanging(value);
					this.SendPropertyChanging();
					this._marketingsite_key = value;
					this.SendPropertyChanged("marketingsite_key");
					this.Onmarketingsite_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int NOT NULL")]
		public int site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_host_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string host_name
		{
			get
			{
				return this._host_name;
			}
			set
			{
				if ((this._host_name != value))
				{
					this.Onhost_nameChanging(value);
					this.SendPropertyChanging();
					this._host_name = value;
					this.SendPropertyChanged("host_name");
					this.Onhost_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_short_description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string short_description
		{
			get
			{
				return this._short_description;
			}
			set
			{
				if ((this._short_description != value))
				{
					this.Onshort_descriptionChanging(value);
					this.SendPropertyChanging();
					this._short_description = value;
					this.SendPropertyChanged("short_description");
					this.Onshort_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_template_lookup", DbType="Int NOT NULL")]
		public int template_lookup
		{
			get
			{
				return this._template_lookup;
			}
			set
			{
				if ((this._template_lookup != value))
				{
					if (this._lookup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontemplate_lookupChanging(value);
					this.SendPropertyChanging();
					this._template_lookup = value;
					this.SendPropertyChanged("template_lookup");
					this.Ontemplate_lookupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lookup_MarketingSite", Storage="_lookup", ThisKey="template_lookup", OtherKey="lookup_key", IsForeignKey=true)]
		public Lookup Lookup
		{
			get
			{
				return this._lookup.Entity;
			}
			set
			{
				Lookup previousValue = this._lookup.Entity;
				if (((previousValue != value) 
							|| (this._lookup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lookup.Entity = null;
						previousValue.MarketingSites.Remove(this);
					}
					this._lookup.Entity = value;
					if ((value != null))
					{
						value.MarketingSites.Add(this);
						this._template_lookup = value.lookup_key;
					}
					else
					{
						this._template_lookup = default(int);
					}
					this.SendPropertyChanged("Lookup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_MarketingSite", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				Site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.MarketingSites.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.MarketingSites.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.media")]
	public partial class Media : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _media_key;
		
		private string _title;
		
		private string _description;
		
		private string _filename;
		
		private int _mediatype_lookup;
		
		private bool _active;
		
		private string _link;
		
		private System.Nullable<int> _site_fkey;
		
		private EntitySet<MediaLink> _media_links;
		
		private EntityRef<Lookup> _lookup;
		
		private EntityRef<Site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmedia_keyChanging(int value);
    partial void Onmedia_keyChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnfilenameChanging(string value);
    partial void OnfilenameChanged();
    partial void Onmediatype_lookupChanging(int value);
    partial void Onmediatype_lookupChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnlinkChanging(string value);
    partial void OnlinkChanged();
    partial void Onsite_fkeyChanging(System.Nullable<int> value);
    partial void Onsite_fkeyChanged();
    #endregion
		
		public Media()
		{
			this._media_links = new EntitySet<MediaLink>(new Action<MediaLink>(this.attach_media_links), new Action<MediaLink>(this.detach_media_links));
			this._lookup = default(EntityRef<Lookup>);
			this._site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_media_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int media_key
		{
			get
			{
				return this._media_key;
			}
			set
			{
				if ((this._media_key != value))
				{
					this.Onmedia_keyChanging(value);
					this.SendPropertyChanging();
					this._media_key = value;
					this.SendPropertyChanged("media_key");
					this.Onmedia_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filename", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string filename
		{
			get
			{
				return this._filename;
			}
			set
			{
				if ((this._filename != value))
				{
					this.OnfilenameChanging(value);
					this.SendPropertyChanging();
					this._filename = value;
					this.SendPropertyChanged("filename");
					this.OnfilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mediatype_lookup", DbType="Int NOT NULL")]
		public int mediatype_lookup
		{
			get
			{
				return this._mediatype_lookup;
			}
			set
			{
				if ((this._mediatype_lookup != value))
				{
					if (this._lookup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmediatype_lookupChanging(value);
					this.SendPropertyChanging();
					this._mediatype_lookup = value;
					this.SendPropertyChanged("mediatype_lookup");
					this.Onmediatype_lookupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link", DbType="NVarChar(MAX)")]
		public string link
		{
			get
			{
				return this._link;
			}
			set
			{
				if ((this._link != value))
				{
					this.OnlinkChanging(value);
					this.SendPropertyChanging();
					this._link = value;
					this.SendPropertyChanged("link");
					this.OnlinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int")]
		public System.Nullable<int> site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Media_MediaLink", Storage="_media_links", ThisKey="media_key", OtherKey="media_fkey")]
		public EntitySet<MediaLink> MediaLinks
		{
			get
			{
				return this._media_links;
			}
			set
			{
				this._media_links.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lookup_Media", Storage="_lookup", ThisKey="mediatype_lookup", OtherKey="lookup_key", IsForeignKey=true)]
		public Lookup Lookup
		{
			get
			{
				return this._lookup.Entity;
			}
			set
			{
				Lookup previousValue = this._lookup.Entity;
				if (((previousValue != value) 
							|| (this._lookup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lookup.Entity = null;
						previousValue.Medias.Remove(this);
					}
					this._lookup.Entity = value;
					if ((value != null))
					{
						value.Medias.Add(this);
						this._mediatype_lookup = value.lookup_key;
					}
					else
					{
						this._mediatype_lookup = default(int);
					}
					this.SendPropertyChanged("Lookup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Media", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				Site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.Medias.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.Medias.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_media_links(MediaLink entity)
		{
			this.SendPropertyChanging();
			entity.Media = this;
		}
		
		private void detach_media_links(MediaLink entity)
		{
			this.SendPropertyChanging();
			entity.Media = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.media_links")]
	public partial class MediaLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _medialink_key;
		
		private int _media_fkey;
		
		private int _link_fkey;
		
		private int _linktype_lookup;
		
		private System.Nullable<int> _site_fkey;
		
		private EntityRef<Lookup> _lookup;
		
		private EntityRef<Media> _media;
		
		private EntityRef<Site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmedialink_keyChanging(int value);
    partial void Onmedialink_keyChanged();
    partial void Onmedia_fkeyChanging(int value);
    partial void Onmedia_fkeyChanged();
    partial void Onlink_fkeyChanging(int value);
    partial void Onlink_fkeyChanged();
    partial void Onlinktype_lookupChanging(int value);
    partial void Onlinktype_lookupChanged();
    partial void Onsite_fkeyChanging(System.Nullable<int> value);
    partial void Onsite_fkeyChanged();
    #endregion
		
		public MediaLink()
		{
			this._lookup = default(EntityRef<Lookup>);
			this._media = default(EntityRef<Media>);
			this._site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medialink_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int medialink_key
		{
			get
			{
				return this._medialink_key;
			}
			set
			{
				if ((this._medialink_key != value))
				{
					this.Onmedialink_keyChanging(value);
					this.SendPropertyChanging();
					this._medialink_key = value;
					this.SendPropertyChanged("medialink_key");
					this.Onmedialink_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_media_fkey", DbType="Int NOT NULL")]
		public int media_fkey
		{
			get
			{
				return this._media_fkey;
			}
			set
			{
				if ((this._media_fkey != value))
				{
					if (this._media.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmedia_fkeyChanging(value);
					this.SendPropertyChanging();
					this._media_fkey = value;
					this.SendPropertyChanged("media_fkey");
					this.Onmedia_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link_fkey", DbType="Int NOT NULL")]
		public int link_fkey
		{
			get
			{
				return this._link_fkey;
			}
			set
			{
				if ((this._link_fkey != value))
				{
					this.Onlink_fkeyChanging(value);
					this.SendPropertyChanging();
					this._link_fkey = value;
					this.SendPropertyChanged("link_fkey");
					this.Onlink_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linktype_lookup", DbType="Int NOT NULL")]
		public int linktype_lookup
		{
			get
			{
				return this._linktype_lookup;
			}
			set
			{
				if ((this._linktype_lookup != value))
				{
					if (this._lookup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlinktype_lookupChanging(value);
					this.SendPropertyChanging();
					this._linktype_lookup = value;
					this.SendPropertyChanged("linktype_lookup");
					this.Onlinktype_lookupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int")]
		public System.Nullable<int> site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lookup_MediaLink", Storage="_lookup", ThisKey="linktype_lookup", OtherKey="lookup_key", IsForeignKey=true)]
		public Lookup Lookup
		{
			get
			{
				return this._lookup.Entity;
			}
			set
			{
				Lookup previousValue = this._lookup.Entity;
				if (((previousValue != value) 
							|| (this._lookup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lookup.Entity = null;
						previousValue.MediaLinks.Remove(this);
					}
					this._lookup.Entity = value;
					if ((value != null))
					{
						value.MediaLinks.Add(this);
						this._linktype_lookup = value.lookup_key;
					}
					else
					{
						this._linktype_lookup = default(int);
					}
					this.SendPropertyChanged("Lookup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Media_MediaLink", Storage="_media", ThisKey="media_fkey", OtherKey="media_key", IsForeignKey=true)]
		public Media Media
		{
			get
			{
				return this._media.Entity;
			}
			set
			{
				Media previousValue = this._media.Entity;
				if (((previousValue != value) 
							|| (this._media.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._media.Entity = null;
						previousValue.MediaLinks.Remove(this);
					}
					this._media.Entity = value;
					if ((value != null))
					{
						value.MediaLinks.Add(this);
						this._media_fkey = value.media_key;
					}
					else
					{
						this._media_fkey = default(int);
					}
					this.SendPropertyChanged("Media");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_MediaLink", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				Site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.MediaLinks.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.MediaLinks.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewsletterReciprients")]
	public partial class NewsletterReciprient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _reciprient_key;
		
		private string _name;
		
		private string _email;
		
		private bool _active;
		
		private bool _confirmed;
		
		private System.Nullable<int> _site_fkey;
		
		private EntityRef<Site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onreciprient_keyChanging(int value);
    partial void Onreciprient_keyChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnconfirmedChanging(bool value);
    partial void OnconfirmedChanged();
    partial void Onsite_fkeyChanging(System.Nullable<int> value);
    partial void Onsite_fkeyChanged();
    #endregion
		
		public NewsletterReciprient()
		{
			this._site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reciprient_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int reciprient_key
		{
			get
			{
				return this._reciprient_key;
			}
			set
			{
				if ((this._reciprient_key != value))
				{
					this.Onreciprient_keyChanging(value);
					this.SendPropertyChanging();
					this._reciprient_key = value;
					this.SendPropertyChanged("reciprient_key");
					this.Onreciprient_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confirmed", DbType="Bit NOT NULL")]
		public bool confirmed
		{
			get
			{
				return this._confirmed;
			}
			set
			{
				if ((this._confirmed != value))
				{
					this.OnconfirmedChanging(value);
					this.SendPropertyChanging();
					this._confirmed = value;
					this.SendPropertyChanged("confirmed");
					this.OnconfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int")]
		public System.Nullable<int> site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_NewsletterReciprient", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				Site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.NewsletterReciprients.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.NewsletterReciprients.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Newsletters")]
	public partial class Newsletter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _newsletter_key;
		
		private string _subject;
		
		private string _body;
		
		private System.Nullable<System.DateTime> _date_sent;
		
		private System.DateTime _date_created;
		
		private System.Nullable<int> _site_fkey;
		
		private EntityRef<Site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onnewsletter_keyChanging(int value);
    partial void Onnewsletter_keyChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void Ondate_sentChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_sentChanged();
    partial void Ondate_createdChanging(System.DateTime value);
    partial void Ondate_createdChanged();
    partial void Onsite_fkeyChanging(System.Nullable<int> value);
    partial void Onsite_fkeyChanged();
    #endregion
		
		public Newsletter()
		{
			this._site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_newsletter_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int newsletter_key
		{
			get
			{
				return this._newsletter_key;
			}
			set
			{
				if ((this._newsletter_key != value))
				{
					this.Onnewsletter_keyChanging(value);
					this.SendPropertyChanging();
					this._newsletter_key = value;
					this.SendPropertyChanged("newsletter_key");
					this.Onnewsletter_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_sent", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_sent
		{
			get
			{
				return this._date_sent;
			}
			set
			{
				if ((this._date_sent != value))
				{
					this.Ondate_sentChanging(value);
					this.SendPropertyChanging();
					this._date_sent = value;
					this.SendPropertyChanged("date_sent");
					this.Ondate_sentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime NOT NULL")]
		public System.DateTime date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int")]
		public System.Nullable<int> site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Newsletter", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				Site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.Newsletters.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.Newsletters.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.offers")]
	public partial class Offer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _offer_key;
		
		private string _title;
		
		private string _description;
		
		private System.Nullable<System.DateTime> _offer_start;
		
		private System.Nullable<System.DateTime> _offer_end;
		
		private bool _active;
		
		private bool _showonhome;
		
		private bool _showinfeed;
		
		private string _url;
		
		private string _shortdescription;
		
		private string _thumbnailimage;
		
		private System.Nullable<int> _site_fkey;
		
		private EntityRef<Site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onoffer_keyChanging(int value);
    partial void Onoffer_keyChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onoffer_startChanging(System.Nullable<System.DateTime> value);
    partial void Onoffer_startChanged();
    partial void Onoffer_endChanging(System.Nullable<System.DateTime> value);
    partial void Onoffer_endChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnshowonhomeChanging(bool value);
    partial void OnshowonhomeChanged();
    partial void OnshowinfeedChanging(bool value);
    partial void OnshowinfeedChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnshortdescriptionChanging(string value);
    partial void OnshortdescriptionChanged();
    partial void OnthumbnailimageChanging(string value);
    partial void OnthumbnailimageChanged();
    partial void Onsite_fkeyChanging(System.Nullable<int> value);
    partial void Onsite_fkeyChanged();
    #endregion
		
		public Offer()
		{
			this._site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_offer_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int offer_key
		{
			get
			{
				return this._offer_key;
			}
			set
			{
				if ((this._offer_key != value))
				{
					this.Onoffer_keyChanging(value);
					this.SendPropertyChanging();
					this._offer_key = value;
					this.SendPropertyChanged("offer_key");
					this.Onoffer_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_offer_start", DbType="Date")]
		public System.Nullable<System.DateTime> offer_start
		{
			get
			{
				return this._offer_start;
			}
			set
			{
				if ((this._offer_start != value))
				{
					this.Onoffer_startChanging(value);
					this.SendPropertyChanging();
					this._offer_start = value;
					this.SendPropertyChanged("offer_start");
					this.Onoffer_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_offer_end", DbType="Date")]
		public System.Nullable<System.DateTime> offer_end
		{
			get
			{
				return this._offer_end;
			}
			set
			{
				if ((this._offer_end != value))
				{
					this.Onoffer_endChanging(value);
					this.SendPropertyChanging();
					this._offer_end = value;
					this.SendPropertyChanged("offer_end");
					this.Onoffer_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_showonhome", DbType="Bit NOT NULL")]
		public bool showonhome
		{
			get
			{
				return this._showonhome;
			}
			set
			{
				if ((this._showonhome != value))
				{
					this.OnshowonhomeChanging(value);
					this.SendPropertyChanging();
					this._showonhome = value;
					this.SendPropertyChanged("showonhome");
					this.OnshowonhomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_showinfeed", DbType="Bit NOT NULL")]
		public bool showinfeed
		{
			get
			{
				return this._showinfeed;
			}
			set
			{
				if ((this._showinfeed != value))
				{
					this.OnshowinfeedChanging(value);
					this.SendPropertyChanging();
					this._showinfeed = value;
					this.SendPropertyChanged("showinfeed");
					this.OnshowinfeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(MAX)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortdescription", DbType="NVarChar(MAX)")]
		public string shortdescription
		{
			get
			{
				return this._shortdescription;
			}
			set
			{
				if ((this._shortdescription != value))
				{
					this.OnshortdescriptionChanging(value);
					this.SendPropertyChanging();
					this._shortdescription = value;
					this.SendPropertyChanged("shortdescription");
					this.OnshortdescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumbnailimage", DbType="NVarChar(50)")]
		public string thumbnailimage
		{
			get
			{
				return this._thumbnailimage;
			}
			set
			{
				if ((this._thumbnailimage != value))
				{
					this.OnthumbnailimageChanging(value);
					this.SendPropertyChanging();
					this._thumbnailimage = value;
					this.SendPropertyChanged("thumbnailimage");
					this.OnthumbnailimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int")]
		public System.Nullable<int> site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Offer", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				Site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.Offers.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.Offers.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pages")]
	public partial class Page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _page_key;
		
		private int _page_fkey;
		
		private string _pageid;
		
		private string _navtitle;
		
		private System.Nullable<char> _accesskey;
		
		private string _metadescription;
		
		private string _metakeywords;
		
		private string _title;
		
		private string _body;
		
		private string _thumbnailimage;
		
		private System.Nullable<bool> _showinnav;
		
		private System.Nullable<bool> _showinfeaturednav;
		
		private System.Nullable<bool> _showonhome;
		
		private System.Nullable<bool> _showinfooter;
		
		private System.Nullable<bool> _active;
		
		private System.Nullable<int> _sortorder;
		
		private string _linkurl;
		
		private System.DateTime _lastmodified;
		
		private string _page_url;
		
		private System.Nullable<bool> _passwordprotect;
		
		private string _password;
		
		private int _site_fkey;
		
		private string _pagetitle;
		
		private EntitySet<Page> _Pages;
		
		private EntityRef<Site> _site;
		
		private EntityRef<Page> _Page1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpage_keyChanging(int value);
    partial void Onpage_keyChanged();
    partial void Onpage_fkeyChanging(int value);
    partial void Onpage_fkeyChanged();
    partial void OnpageidChanging(string value);
    partial void OnpageidChanged();
    partial void OnnavtitleChanging(string value);
    partial void OnnavtitleChanged();
    partial void OnaccesskeyChanging(System.Nullable<char> value);
    partial void OnaccesskeyChanged();
    partial void OnmetadescriptionChanging(string value);
    partial void OnmetadescriptionChanged();
    partial void OnmetakeywordsChanging(string value);
    partial void OnmetakeywordsChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void OnthumbnailimageChanging(string value);
    partial void OnthumbnailimageChanged();
    partial void OnshowinnavChanging(System.Nullable<bool> value);
    partial void OnshowinnavChanged();
    partial void OnshowinfeaturednavChanging(System.Nullable<bool> value);
    partial void OnshowinfeaturednavChanged();
    partial void OnshowonhomeChanging(System.Nullable<bool> value);
    partial void OnshowonhomeChanged();
    partial void OnshowinfooterChanging(System.Nullable<bool> value);
    partial void OnshowinfooterChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    partial void OnsortorderChanging(System.Nullable<int> value);
    partial void OnsortorderChanged();
    partial void OnlinkurlChanging(string value);
    partial void OnlinkurlChanged();
    partial void OnlastmodifiedChanging(System.DateTime value);
    partial void OnlastmodifiedChanged();
    partial void Onpage_urlChanging(string value);
    partial void Onpage_urlChanged();
    partial void OnpasswordprotectChanging(System.Nullable<bool> value);
    partial void OnpasswordprotectChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onsite_fkeyChanging(int value);
    partial void Onsite_fkeyChanged();
    partial void OnpagetitleChanging(string value);
    partial void OnpagetitleChanged();
    #endregion
		
		public Page()
		{
			this._Pages = new EntitySet<Page>(new Action<Page>(this.attach_Pages), new Action<Page>(this.detach_Pages));
			this._site = default(EntityRef<Site>);
			this._Page1 = default(EntityRef<Page>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int page_key
		{
			get
			{
				return this._page_key;
			}
			set
			{
				if ((this._page_key != value))
				{
					this.Onpage_keyChanging(value);
					this.SendPropertyChanging();
					this._page_key = value;
					this.SendPropertyChanged("page_key");
					this.Onpage_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_fkey", DbType="Int")]
		public int page_fkey
		{
			get
			{
				return this._page_fkey;
			}
			set
			{
				if ((this._page_fkey != value))
				{
					if (this._Page1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpage_fkeyChanging(value);
					this.SendPropertyChanging();
					this._page_fkey = value;
					this.SendPropertyChanged("page_fkey");
					this.Onpage_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageid", DbType="NVarChar(50)")]
		public string pageid
		{
			get
			{
				return this._pageid;
			}
			set
			{
				if ((this._pageid != value))
				{
					this.OnpageidChanging(value);
					this.SendPropertyChanging();
					this._pageid = value;
					this.SendPropertyChanged("pageid");
					this.OnpageidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_navtitle", DbType="NVarChar(50)")]
		public string navtitle
		{
			get
			{
				return this._navtitle;
			}
			set
			{
				if ((this._navtitle != value))
				{
					this.OnnavtitleChanging(value);
					this.SendPropertyChanging();
					this._navtitle = value;
					this.SendPropertyChanged("navtitle");
					this.OnnavtitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accesskey", DbType="NChar(1)")]
		public System.Nullable<char> accesskey
		{
			get
			{
				return this._accesskey;
			}
			set
			{
				if ((this._accesskey != value))
				{
					this.OnaccesskeyChanging(value);
					this.SendPropertyChanging();
					this._accesskey = value;
					this.SendPropertyChanged("accesskey");
					this.OnaccesskeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_metadescription", DbType="NVarChar(MAX)")]
		public string metadescription
		{
			get
			{
				return this._metadescription;
			}
			set
			{
				if ((this._metadescription != value))
				{
					this.OnmetadescriptionChanging(value);
					this.SendPropertyChanging();
					this._metadescription = value;
					this.SendPropertyChanged("metadescription");
					this.OnmetadescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_metakeywords", DbType="NVarChar(MAX)")]
		public string metakeywords
		{
			get
			{
				return this._metakeywords;
			}
			set
			{
				if ((this._metakeywords != value))
				{
					this.OnmetakeywordsChanging(value);
					this.SendPropertyChanging();
					this._metakeywords = value;
					this.SendPropertyChanged("metakeywords");
					this.OnmetakeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumbnailimage", DbType="NVarChar(128)")]
		public string thumbnailimage
		{
			get
			{
				return this._thumbnailimage;
			}
			set
			{
				if ((this._thumbnailimage != value))
				{
					this.OnthumbnailimageChanging(value);
					this.SendPropertyChanging();
					this._thumbnailimage = value;
					this.SendPropertyChanged("thumbnailimage");
					this.OnthumbnailimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_showinnav", DbType="Bit")]
		public System.Nullable<bool> showinnav
		{
			get
			{
				return this._showinnav;
			}
			set
			{
				if ((this._showinnav != value))
				{
					this.OnshowinnavChanging(value);
					this.SendPropertyChanging();
					this._showinnav = value;
					this.SendPropertyChanged("showinnav");
					this.OnshowinnavChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_showinfeaturednav", DbType="Bit")]
		public System.Nullable<bool> showinfeaturednav
		{
			get
			{
				return this._showinfeaturednav;
			}
			set
			{
				if ((this._showinfeaturednav != value))
				{
					this.OnshowinfeaturednavChanging(value);
					this.SendPropertyChanging();
					this._showinfeaturednav = value;
					this.SendPropertyChanged("showinfeaturednav");
					this.OnshowinfeaturednavChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_showonhome", DbType="Bit")]
		public System.Nullable<bool> showonhome
		{
			get
			{
				return this._showonhome;
			}
			set
			{
				if ((this._showonhome != value))
				{
					this.OnshowonhomeChanging(value);
					this.SendPropertyChanging();
					this._showonhome = value;
					this.SendPropertyChanged("showonhome");
					this.OnshowonhomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_showinfooter", DbType="Bit")]
		public System.Nullable<bool> showinfooter
		{
			get
			{
				return this._showinfooter;
			}
			set
			{
				if ((this._showinfooter != value))
				{
					this.OnshowinfooterChanging(value);
					this.SendPropertyChanging();
					this._showinfooter = value;
					this.SendPropertyChanged("showinfooter");
					this.OnshowinfooterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sortorder", DbType="Int")]
		public System.Nullable<int> sortorder
		{
			get
			{
				return this._sortorder;
			}
			set
			{
				if ((this._sortorder != value))
				{
					this.OnsortorderChanging(value);
					this.SendPropertyChanging();
					this._sortorder = value;
					this.SendPropertyChanged("sortorder");
					this.OnsortorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkurl", DbType="NVarChar(50)")]
		public string linkurl
		{
			get
			{
				return this._linkurl;
			}
			set
			{
				if ((this._linkurl != value))
				{
					this.OnlinkurlChanging(value);
					this.SendPropertyChanging();
					this._linkurl = value;
					this.SendPropertyChanged("linkurl");
					this.OnlinkurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastmodified", DbType="DateTime NOT NULL")]
		public System.DateTime lastmodified
		{
			get
			{
				return this._lastmodified;
			}
			set
			{
				if ((this._lastmodified != value))
				{
					this.OnlastmodifiedChanging(value);
					this.SendPropertyChanging();
					this._lastmodified = value;
					this.SendPropertyChanged("lastmodified");
					this.OnlastmodifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_url", DbType="NVarChar(MAX)")]
		public string page_url
		{
			get
			{
				return this._page_url;
			}
			set
			{
				if ((this._page_url != value))
				{
					this.Onpage_urlChanging(value);
					this.SendPropertyChanging();
					this._page_url = value;
					this.SendPropertyChanged("page_url");
					this.Onpage_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwordprotect", DbType="Bit")]
		public System.Nullable<bool> passwordprotect
		{
			get
			{
				return this._passwordprotect;
			}
			set
			{
				if ((this._passwordprotect != value))
				{
					this.OnpasswordprotectChanging(value);
					this.SendPropertyChanging();
					this._passwordprotect = value;
					this.SendPropertyChanged("passwordprotect");
					this.OnpasswordprotectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(12)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int")]
		public int site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pagetitle", DbType="NVarChar(255)")]
		public string pagetitle
		{
			get
			{
				return this._pagetitle;
			}
			set
			{
				if ((this._pagetitle != value))
				{
					this.OnpagetitleChanging(value);
					this.SendPropertyChanging();
					this._pagetitle = value;
					this.SendPropertyChanged("pagetitle");
					this.OnpagetitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_Page", Storage="_Pages", ThisKey="page_key", OtherKey="page_fkey")]
		public EntitySet<Page> Pages
		{
			get
			{
				return this._Pages;
			}
			set
			{
				this._Pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Page", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				Site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.Pages.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.Pages.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_Page", Storage="_Page1", ThisKey="page_fkey", OtherKey="page_key", IsForeignKey=true)]
		public Page Page1
		{
			get
			{
				return this._Page1.Entity;
			}
			set
			{
				Page previousValue = this._Page1.Entity;
				if (((previousValue != value) 
							|| (this._Page1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Page1.Entity = null;
						previousValue.Pages.Remove(this);
					}
					this._Page1.Entity = value;
					if ((value != null))
					{
						value.Pages.Add(this);
						this._page_fkey = value.page_key;
					}
					else
					{
						this._page_fkey = default(int);
					}
					this.SendPropertyChanged("Page1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.Page1 = this;
		}
		
		private void detach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.Page1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.projects")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _project_key;
		
		private string _title;
		
		private string _description;
		
		private System.Nullable<System.DateTime> _start_date;
		
		private System.Nullable<System.DateTime> _end_date;
		
		private bool _active;
		
		private bool _include_in_rss;
		
		private string _photogallery_id;
		
		private string _video_id;
		
		private string _url;
		
		private System.Nullable<int> _site_fkey;
		
		private EntitySet<Testimony> _testimonies;
		
		private EntityRef<Site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproject_keyChanging(int value);
    partial void Onproject_keyChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onstart_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onend_dateChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void Oninclude_in_rssChanging(bool value);
    partial void Oninclude_in_rssChanged();
    partial void Onphotogallery_idChanging(string value);
    partial void Onphotogallery_idChanged();
    partial void Onvideo_idChanging(string value);
    partial void Onvideo_idChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void Onsite_fkeyChanging(System.Nullable<int> value);
    partial void Onsite_fkeyChanged();
    #endregion
		
		public Project()
		{
			this._testimonies = new EntitySet<Testimony>(new Action<Testimony>(this.attach_testimonies), new Action<Testimony>(this.detach_testimonies));
			this._site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int project_key
		{
			get
			{
				return this._project_key;
			}
			set
			{
				if ((this._project_key != value))
				{
					this.Onproject_keyChanging(value);
					this.SendPropertyChanging();
					this._project_key = value;
					this.SendPropertyChanged("project_key");
					this.Onproject_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="Date")]
		public System.Nullable<System.DateTime> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="Date")]
		public System.Nullable<System.DateTime> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_include_in_rss", DbType="Bit NOT NULL")]
		public bool include_in_rss
		{
			get
			{
				return this._include_in_rss;
			}
			set
			{
				if ((this._include_in_rss != value))
				{
					this.Oninclude_in_rssChanging(value);
					this.SendPropertyChanging();
					this._include_in_rss = value;
					this.SendPropertyChanged("include_in_rss");
					this.Oninclude_in_rssChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photogallery_id", DbType="NVarChar(50)")]
		public string photogallery_id
		{
			get
			{
				return this._photogallery_id;
			}
			set
			{
				if ((this._photogallery_id != value))
				{
					this.Onphotogallery_idChanging(value);
					this.SendPropertyChanging();
					this._photogallery_id = value;
					this.SendPropertyChanged("photogallery_id");
					this.Onphotogallery_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_video_id", DbType="NVarChar(50)")]
		public string video_id
		{
			get
			{
				return this._video_id;
			}
			set
			{
				if ((this._video_id != value))
				{
					this.Onvideo_idChanging(value);
					this.SendPropertyChanging();
					this._video_id = value;
					this.SendPropertyChanged("video_id");
					this.Onvideo_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(MAX)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int")]
		public System.Nullable<int> site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Testimony", Storage="_testimonies", ThisKey="project_key", OtherKey="project_fkey")]
		public EntitySet<Testimony> Testimonies
		{
			get
			{
				return this._testimonies;
			}
			set
			{
				this._testimonies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Project", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				Site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_testimonies(Testimony entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_testimonies(Testimony entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sites")]
	public partial class Site : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _site_key;
		
		private string _name;
		
		private string _hostname;
		
		private bool _active;
		
		private EntitySet<Article> _articles;
		
		private EntitySet<Testimony> _testimonies;
		
		private EntitySet<Banner> _banners;
		
		private EntitySet<MarketingSite> _marketingsites;
		
		private EntitySet<Media> _medias;
		
		private EntitySet<MediaLink> _media_links;
		
		private EntitySet<NewsletterReciprient> _NewsletterReciprients;
		
		private EntitySet<Newsletter> _Newsletters;
		
		private EntitySet<Offer> _offers;
		
		private EntitySet<Page> _pages;
		
		private EntitySet<Project> _projects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsite_keyChanging(int value);
    partial void Onsite_keyChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnhostnameChanging(string value);
    partial void OnhostnameChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public Site()
		{
			this._articles = new EntitySet<Article>(new Action<Article>(this.attach_articles), new Action<Article>(this.detach_articles));
			this._testimonies = new EntitySet<Testimony>(new Action<Testimony>(this.attach_testimonies), new Action<Testimony>(this.detach_testimonies));
			this._banners = new EntitySet<Banner>(new Action<Banner>(this.attach_banners), new Action<Banner>(this.detach_banners));
			this._marketingsites = new EntitySet<MarketingSite>(new Action<MarketingSite>(this.attach_marketingsites), new Action<MarketingSite>(this.detach_marketingsites));
			this._medias = new EntitySet<Media>(new Action<Media>(this.attach_medias), new Action<Media>(this.detach_medias));
			this._media_links = new EntitySet<MediaLink>(new Action<MediaLink>(this.attach_media_links), new Action<MediaLink>(this.detach_media_links));
			this._NewsletterReciprients = new EntitySet<NewsletterReciprient>(new Action<NewsletterReciprient>(this.attach_NewsletterReciprients), new Action<NewsletterReciprient>(this.detach_NewsletterReciprients));
			this._Newsletters = new EntitySet<Newsletter>(new Action<Newsletter>(this.attach_Newsletters), new Action<Newsletter>(this.detach_Newsletters));
			this._offers = new EntitySet<Offer>(new Action<Offer>(this.attach_offers), new Action<Offer>(this.detach_offers));
			this._pages = new EntitySet<Page>(new Action<Page>(this.attach_pages), new Action<Page>(this.detach_pages));
			this._projects = new EntitySet<Project>(new Action<Project>(this.attach_projects), new Action<Project>(this.detach_projects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int site_key
		{
			get
			{
				return this._site_key;
			}
			set
			{
				if ((this._site_key != value))
				{
					this.Onsite_keyChanging(value);
					this.SendPropertyChanging();
					this._site_key = value;
					this.SendPropertyChanged("site_key");
					this.Onsite_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostname", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string hostname
		{
			get
			{
				return this._hostname;
			}
			set
			{
				if ((this._hostname != value))
				{
					this.OnhostnameChanging(value);
					this.SendPropertyChanging();
					this._hostname = value;
					this.SendPropertyChanged("hostname");
					this.OnhostnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Article", Storage="_articles", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<Article> Articles
		{
			get
			{
				return this._articles;
			}
			set
			{
				this._articles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Testimony", Storage="_testimonies", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<Testimony> Testimonies
		{
			get
			{
				return this._testimonies;
			}
			set
			{
				this._testimonies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Banner", Storage="_banners", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<Banner> Banners
		{
			get
			{
				return this._banners;
			}
			set
			{
				this._banners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_MarketingSite", Storage="_marketingsites", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<MarketingSite> MarketingSites
		{
			get
			{
				return this._marketingsites;
			}
			set
			{
				this._marketingsites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Media", Storage="_medias", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<Media> Medias
		{
			get
			{
				return this._medias;
			}
			set
			{
				this._medias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_MediaLink", Storage="_media_links", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<MediaLink> MediaLinks
		{
			get
			{
				return this._media_links;
			}
			set
			{
				this._media_links.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_NewsletterReciprient", Storage="_NewsletterReciprients", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<NewsletterReciprient> NewsletterReciprients
		{
			get
			{
				return this._NewsletterReciprients;
			}
			set
			{
				this._NewsletterReciprients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Newsletter", Storage="_Newsletters", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<Newsletter> Newsletters
		{
			get
			{
				return this._Newsletters;
			}
			set
			{
				this._Newsletters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Offer", Storage="_offers", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<Offer> Offers
		{
			get
			{
				return this._offers;
			}
			set
			{
				this._offers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Page", Storage="_pages", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<Page> Pages
		{
			get
			{
				return this._pages;
			}
			set
			{
				this._pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Project", Storage="_projects", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._projects;
			}
			set
			{
				this._projects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_testimonies(Testimony entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_testimonies(Testimony entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_banners(Banner entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_banners(Banner entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_marketingsites(MarketingSite entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_marketingsites(MarketingSite entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_medias(Media entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_medias(Media entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_media_links(MediaLink entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_media_links(MediaLink entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_NewsletterReciprients(NewsletterReciprient entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_NewsletterReciprients(NewsletterReciprient entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_Newsletters(Newsletter entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_Newsletters(Newsletter entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_offers(Offer entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_offers(Offer entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
	}
}
#pragma warning restore 1591
